pipenv shell ........ flask run

pipenv run flask run

postgres=# create user "minstagram_app" with createdb;
postgres=# create database "minstagram_db" with owner "minstagram_app";
postgres=# drop database "minstagram_db";
postgres=# drop user "minstagram_app";

DATABASE_URL=postgresql://minstagram_app:password@localhost/minstagram_db

remember to run migrations and seeders if you havent already



$ pipenv run flask db downgrade
$ pipenv run flask db upgrade

$ pipenv run flask seed all
$ pipenv run flask seed undo

$ npm install
$ npm start




pl[$ touch app/models/foo.py
import Foo model into app/models/__init__.py
Note - you have to drop and recreate the db before migrations can be re-generated
$ pipenv run flask db migrate -m "Meaningless message"
$ pipenv run flask db upgrade


deploying:
$ pipenv lock -r > requirements.txt
$ heroku container:push web -a minstagram-beta
$ heroku container:release web -a minstagram-beta

for problems like 500 server error in browser
$ heroku logs -a minstagram-beta

Heroku will set a DATABASE_URL for you in Config Vars (section in heroku browser interface)
But you will need to set a SECRET_KEY there too

https://github.com/appacademy-starters/python-project-starter




AWS Issues

* had to find acl access option and switch it on
* it was buried in the bucket settings but it was also a switch on the first page of making a new bucket
* also had to run $ pipenv lock -r > requirements.txt to update requirements
* then had to manually update the docker file with...
    $ heroku container:push web -a minstagram-beta
    $ heroku container:release web -a minstagram-beta
* then had to manually add the environment variables on heroku
* that was it!